// Code generated by go-swagger; DO NOT EDIT.

package operations

/**
 * Panther is a Cloud-Native SIEM for the Modern Security Team.
 * Copyright (C) 2020 Panther Labs Inc
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/panther-labs/panther/api/gateway/analysis/models"
)

// ModifyPolicyReader is a Reader for the ModifyPolicy structure.
type ModifyPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ModifyPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewModifyPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewModifyPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewModifyPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewModifyPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewModifyPolicyOK creates a ModifyPolicyOK with default headers values
func NewModifyPolicyOK() *ModifyPolicyOK {
	return &ModifyPolicyOK{}
}

/*ModifyPolicyOK handles this case with default header values.

OK
*/
type ModifyPolicyOK struct {
	Payload *models.Policy
}

func (o *ModifyPolicyOK) Error() string {
	return fmt.Sprintf("[POST /update][%d] modifyPolicyOK  %+v", 200, o.Payload)
}

func (o *ModifyPolicyOK) GetPayload() *models.Policy {
	return o.Payload
}

func (o *ModifyPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Policy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyPolicyBadRequest creates a ModifyPolicyBadRequest with default headers values
func NewModifyPolicyBadRequest() *ModifyPolicyBadRequest {
	return &ModifyPolicyBadRequest{}
}

/*ModifyPolicyBadRequest handles this case with default header values.

Bad request
*/
type ModifyPolicyBadRequest struct {
	Payload *models.Error
}

func (o *ModifyPolicyBadRequest) Error() string {
	return fmt.Sprintf("[POST /update][%d] modifyPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *ModifyPolicyBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ModifyPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyPolicyNotFound creates a ModifyPolicyNotFound with default headers values
func NewModifyPolicyNotFound() *ModifyPolicyNotFound {
	return &ModifyPolicyNotFound{}
}

/*ModifyPolicyNotFound handles this case with default header values.

Policy not found
*/
type ModifyPolicyNotFound struct {
}

func (o *ModifyPolicyNotFound) Error() string {
	return fmt.Sprintf("[POST /update][%d] modifyPolicyNotFound ", 404)
}

func (o *ModifyPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewModifyPolicyInternalServerError creates a ModifyPolicyInternalServerError with default headers values
func NewModifyPolicyInternalServerError() *ModifyPolicyInternalServerError {
	return &ModifyPolicyInternalServerError{}
}

/*ModifyPolicyInternalServerError handles this case with default header values.

Internal server error
*/
type ModifyPolicyInternalServerError struct {
}

func (o *ModifyPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /update][%d] modifyPolicyInternalServerError ", 500)
}

func (o *ModifyPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
